package models

import (
	"time"

	"gorm.io/gorm"
)

//{{.NameCamel}}
type {{.NameCamel}} struct {
	{{- range .Fields}}
    {{- $name := .NameCamel}}
	{{- $type := ""}}
    {{- if eq .0 "None" }}
        {{- $type = .MetaType.GoType }}
        {{- if eq .NameCamel "DeletedAt"}}
            {{- $type = "gorm.DeletedAt" }}
	    {{- end }}
	{{- end }}
    {{- if or (eq .JoinType "BelongTo") (eq .JoinType "HasOne") }}
	    {{- $name = .NameCamel}}
	    {{- $type = .JoinTable.NameCamel}}
	{{- end}}
	{{- if or (eq .JoinType "ManyToMany") (eq .JoinType "HasMany") }}
	    {{- $name = .NameCamelPlural}}
	    {{- $type = (printf "%s%s" "[]*" .JoinTable.NameCamel)}}
	{{- end}}
	{{$name}} {{$type}} `{{.TagsHTML}}`
    {{- end}}

    {{- range .BackReferenceInfos}}
    {{.NameCamelPlural}} {{(printf "%s%s" "[]*" .NameCamel)}} `json:"-" gorm:"{{.NameLowerCamelPlural}};many2many:{{.JoinTableName}}"`
    {{- end}}
}

//TableName
func (m *{{.NameCamel}}) TableName() string {
	return "{{.Name}}"
}
